{{- if eq "true" (include "stackgres.operator.upgradeCrds" .) }}
apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ .Release.Name }}-set-crd-version"
  namespace: {{ .Release.Namespace }}
  labels:
    app: "{{ .Release.Name }}-set-crd-version"
    scope: init
    job: set-crd-version
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weight": "60"
    {{- with .Values.jobs.annotations }}
    {{ toYaml . | nindent 4 }}
    {{- end }}
spec:
  template:
    metadata:
      labels:
        app: "{{ .Release.Name }}-set-crd-version"
        scope: init
        job: set-crd-version
    spec:
      {{- with .Values.jobs.affinity}}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end}}
      {{- with .Values.jobs.nodeSelector}}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ .Release.Name }}-init
      restartPolicy: OnFailure
      terminationGracePeriodSeconds: 0
      {{- with .Values.jobs.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- if or (not (.Capabilities.APIVersions.Has "project.openshift.io/v1")) .Values.developer.disableArbitraryUser }}
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        {{- end }}
      containers:
      - name: "set-crd-version"
        image: {{ template "kubectl.image" . }}
        imagePullPolicy: "IfNotPresent"
        command:
          - "/bin/bash"
          - "-ecx"
          - |
            kubectl get crd -o name | grep '\.stackgres\.io$' \
              | while read -r CRD
                do
                  kubectl annotate --overwrite "$CRD" stackgres.io/operatorVersion={{ .Chart.Version }}
                done
{{- end }}
